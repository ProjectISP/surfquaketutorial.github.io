{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to surfQuake surfQuake is an amenable toolbox that joins functionality and standard algorithms commonly used in seismology. The complete software is separated in several modules and each module is designed to overcome a specific task.","title":"Home"},{"location":"#welcome-to-surfquake","text":"surfQuake is an amenable toolbox that joins functionality and standard algorithms commonly used in seismology. The complete software is separated in several modules and each module is designed to overcome a specific task.","title":"Welcome to surfQuake"},{"location":"picker/","text":"MyClass A brief introduction to what MyClass does. Attributes attribute1 : Description of attribute1. attribute2 : Description of attribute2. Methods __init__(self, param1, param2) Description of the constructor method. Parameters param1 : Description of param1. param2 : Description of param2. method1(self, arg1) Description of method1. Parameters arg1 : Description of arg1. Returns Description of what the method returns. method2(self, arg2) Description of method2. Parameters arg2 : Description of arg2. Returns Description of what the method returns. class method ( self , pathname_or_url = None , ** kwargs ): \"\"\" A method to pick seismic data. :param pathname_or_url: The path or URL of the seismic data. :type pathname_or_url: str, optional :param **kwargs: Additional keyword arguments. :returns: The seismic data. :rtype: :class:`~obspy.core.stream.Stream` \"\"\" # Implementation of the picker method pass","title":"Picker"},{"location":"picker/#myclass","text":"A brief introduction to what MyClass does.","title":"MyClass"},{"location":"picker/#attributes","text":"attribute1 : Description of attribute1. attribute2 : Description of attribute2.","title":"Attributes"},{"location":"picker/#methods","text":"","title":"Methods"},{"location":"picker/#__init__self-param1-param2","text":"Description of the constructor method.","title":"__init__(self, param1, param2)"},{"location":"picker/#parameters","text":"param1 : Description of param1. param2 : Description of param2.","title":"Parameters"},{"location":"picker/#method1self-arg1","text":"Description of method1.","title":"method1(self, arg1)"},{"location":"picker/#parameters_1","text":"arg1 : Description of arg1.","title":"Parameters"},{"location":"picker/#returns","text":"Description of what the method returns.","title":"Returns"},{"location":"picker/#method2self-arg2","text":"Description of method2.","title":"method2(self, arg2)"},{"location":"picker/#parameters_2","text":"arg2 : Description of arg2.","title":"Parameters"},{"location":"picker/#returns_1","text":"Description of what the method returns. class method ( self , pathname_or_url = None , ** kwargs ): \"\"\" A method to pick seismic data. :param pathname_or_url: The path or URL of the seismic data. :type pathname_or_url: str, optional :param **kwargs: Additional keyword arguments. :returns: The seismic data. :rtype: :class:`~obspy.core.stream.Stream` \"\"\" # Implementation of the picker method pass","title":"Returns"},{"location":"project/","text":"Welcome to surfQuake surfQuake is an amenable toolbox that joins functionality and standard algorithms commonly used in seismology. The complete software is separated in several modules and each module is designed to overcome a specific task.","title":"Welcome to surfQuake"},{"location":"project/#welcome-to-surfquake","text":"surfQuake is an amenable toolbox that joins functionality and standard algorithms commonly used in seismology. The complete software is separated in several modules and each module is designed to overcome a specific task.","title":"Welcome to surfQuake"}]}